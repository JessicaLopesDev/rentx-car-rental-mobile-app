"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

function _configPlugins() {
  const data = require("@expo/config-plugins");

  _configPlugins = function () {
    return data;
  };

  return data;
}

function _createLegacyPlugin() {
  const data = require("./createLegacyPlugin");

  _createLegacyPlugin = function () {
    return data;
  };

  return data;
}

const withAppleSignInEntitlement = config => {
  return (0, _configPlugins().withEntitlementsPlist)(config, config => {
    config.modResults = setAppleSignInEntitlement(config, config.modResults);
    return config;
  });
};

function setAppleSignInEntitlement(config, entitlementsPlist) {
  var _config$ios;

  if ((_config$ios = config.ios) !== null && _config$ios !== void 0 && _config$ios.usesAppleSignIn) {
    return { ...entitlementsPlist,
      'com.apple.developer.applesignin': ['Default']
    };
  }

  return entitlementsPlist;
}

var _default = (0, _createLegacyPlugin().createLegacyPlugin)({
  packageName: 'expo-apple-authentication',
  fallback: withAppleSignInEntitlement
});

exports.default = _default;
//# sourceMappingURL=expo-apple-authentication.js.map