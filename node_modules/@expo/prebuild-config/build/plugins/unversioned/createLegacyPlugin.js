"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.createLegacyPlugin = createLegacyPlugin;

function _configPlugins() {
  const data = require("@expo/config-plugins");

  _configPlugins = function () {
    return data;
  };

  return data;
}

const camelize = s => s.replace(/-./g, x => x.toUpperCase()[1]);

function createLegacyPlugin({
  packageName,
  fallback
}) {
  let withFallback;

  if (Array.isArray(fallback)) {
    withFallback = config => (0, _configPlugins().withPlugins)(config, fallback);
  } else {
    withFallback = fallback;
  }

  const withUnknown = config => {
    return (0, _configPlugins().withStaticPlugin)(config, {
      _isLegacyPlugin: true,
      plugin: packageName,
      // If the static plugin isn't found, use the unversioned one.
      fallback: (0, _configPlugins().createRunOncePlugin)(withFallback, packageName)
    });
  };

  const methodName = camelize(`with-${packageName}`);

  if (methodName) {
    Object.defineProperty(withUnknown, 'name', {
      value: methodName
    });
  }

  return withUnknown;
}
//# sourceMappingURL=createLegacyPlugin.js.map