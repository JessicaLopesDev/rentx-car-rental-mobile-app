{"version":3,"sources":["../../../src/plugins/unversioned/createLegacyPlugin.ts"],"names":["camelize","s","replace","x","toUpperCase","createLegacyPlugin","packageName","fallback","withFallback","Array","isArray","config","withUnknown","_isLegacyPlugin","plugin","methodName","Object","defineProperty","value"],"mappings":";;;;;;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAQA,MAAMA,QAAQ,GAAIC,CAAD,IAAeA,CAAC,CAACC,OAAF,CAAU,KAAV,EAAiBC,CAAC,IAAIA,CAAC,CAACC,WAAF,GAAgB,CAAhB,CAAtB,CAAhC;;AAEO,SAASC,kBAAT,CAA4B;AACjCC,EAAAA,WADiC;AAEjCC,EAAAA;AAFiC,CAA5B,EAMU;AACf,MAAIC,YAAJ;;AAEA,MAAIC,KAAK,CAACC,OAAN,CAAcH,QAAd,CAAJ,EAA6B;AAC3BC,IAAAA,YAAY,GAAGG,MAAM,IAAI,kCAAYA,MAAZ,EAAoBJ,QAApB,CAAzB;AACD,GAFD,MAEO;AACLC,IAAAA,YAAY,GAAGD,QAAf;AACD;;AAED,QAAMK,WAAyB,GAAGD,MAAM,IAAI;AAC1C,WAAO,uCAAiBA,MAAjB,EAAyB;AAC9BE,MAAAA,eAAe,EAAE,IADa;AAE9BC,MAAAA,MAAM,EAAER,WAFsB;AAG9B;AACAC,MAAAA,QAAQ,EAAE,0CAAoBC,YAApB,EAAkCF,WAAlC;AAJoB,KAAzB,CAAP;AAMD,GAPD;;AASA,QAAMS,UAAU,GAAGf,QAAQ,CAAE,QAAOM,WAAY,EAArB,CAA3B;;AAEA,MAAIS,UAAJ,EAAgB;AACdC,IAAAA,MAAM,CAACC,cAAP,CAAsBL,WAAtB,EAAmC,MAAnC,EAA2C;AACzCM,MAAAA,KAAK,EAAEH;AADkC,KAA3C;AAGD;;AAED,SAAOH,WAAP;AACD","sourcesContent":["import {\n  ConfigPlugin,\n  createRunOncePlugin,\n  PluginParameters,\n  withPlugins,\n  withStaticPlugin,\n} from '@expo/config-plugins';\n\nconst camelize = (s: string) => s.replace(/-./g, x => x.toUpperCase()[1]);\n\nexport function createLegacyPlugin({\n  packageName,\n  fallback,\n}: {\n  packageName: string;\n  fallback: ConfigPlugin | PluginParameters<typeof withPlugins>;\n}): ConfigPlugin {\n  let withFallback: ConfigPlugin;\n\n  if (Array.isArray(fallback)) {\n    withFallback = config => withPlugins(config, fallback);\n  } else {\n    withFallback = fallback;\n  }\n\n  const withUnknown: ConfigPlugin = config => {\n    return withStaticPlugin(config, {\n      _isLegacyPlugin: true,\n      plugin: packageName,\n      // If the static plugin isn't found, use the unversioned one.\n      fallback: createRunOncePlugin(withFallback, packageName),\n    });\n  };\n\n  const methodName = camelize(`with-${packageName}`);\n\n  if (methodName) {\n    Object.defineProperty(withUnknown, 'name', {\n      value: methodName,\n    });\n  }\n\n  return withUnknown;\n}\n"],"file":"createLegacyPlugin.js"}